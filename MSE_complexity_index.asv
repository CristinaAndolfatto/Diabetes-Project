function [MSE]=MSE_complexity_index(subj)
% calculate the MSE complexity index
% Input: 
%       subj: subject
% Output: 
%       MSE: multiscale entropy complexity index

data=subj.timeTableImputed{:,1}; % glucose data time series
% selection of valid glucose windows
MSE_windows=[];
beginWindow=1;
% window_number=1;
while beginWindow<(size(data,1)-863)
      curr_data_window=data(beginWindow:beginWindow+863,1);
      if sum(isnan(curr_data_window))<144
          %the window is valid
          %follows the computation of the MSE index on the current window
          %data
%           windows(window_number,:)=curr_data_window;
%           window_number=window_number+1;
            
          sigma=nanstd(data); % standard deviation of glucose signal

          % m: embedding dimension
          % r: tolerance level
          % M: the largest scale factor
        
          m=2;
          r=0.15*sigma;
          M=7;
        
          % compute sample entropy for each coarse-grained sequence
          S=zeros(1,M);
        
          for i=1:M

              % coarse-grained sequence
              data_seq=coarse_graining(data,i); 
              % (m+1)-element sequences
              Z=buffer(data_seq,m+1,m,'nodelay')';
              % matching (m+1)-element sequences
              A=sum(pdist(Z,'chebychev')<r);
              % m-element sequences
              Z=Z(:,1:m);
              % matching m-element sequences
              B=sum(pdist(Z,'chebychev')<r);
              % take log to compute sample entropy
              S(i)=log(B/A);
          end
        
              % compute MSE complexity index
              curr_MSE=trapz(1:M,S);
              MSE_windows=[MSE_windows; curr_MSE];
        end
      beginWindow=beginWindow+863;
end %while
%computat
MSE=mean(MSE_windows);